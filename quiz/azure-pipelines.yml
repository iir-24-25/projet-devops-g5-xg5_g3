trigger:
- main  # ou master selon votre convention

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  jobs:
  - job: BuildJob
    steps:
    - task: NodeTool@0  # Ajustez selon votre technologie (.NET, Java, etc.)
      inputs:
        versionSpec: '16.x'
      displayName: 'Install Node.js'
      
    - script: |
        npm install
        npm run build
      displayName: 'Build'
      
    - script: |
        npm test
      displayName: 'Run tests'
      failOnStderr: true
      
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/test-*.xml'
        mergeTestResults: true
      condition: succeededOrFailed()
      
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: 'build'  # Ajustez selon votre dossier de build
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: DeployJob
    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'drop'
        downloadPath: '$(System.ArtifactsDirectory)'
        
    - task: AzureWebApp@1  # Pour d√©ployer vers Azure App Service
      inputs:
        azureSubscription: 'Your-Azure-Subscription'
        appType: 'webApp'
        appName: 'YourAppServiceName'
        package: '$(System.ArtifactsDirectory)/drop'
        deploymentMethod: 'auto'